{"mappings":"ACCA,IAAI,EAAc,SAAS,gBAAgB,CAAC,mBAExC,EAAa,EAkEjB,SAAS,EAAa,CAAI,CAAE,CAAI,EAC5B,IAAI,EAAkB,EAAK,MAAM,CAAC,GAAG,WAAW,GAAK,EAAK,KAAK,CAAC,GAAG,WAAW,GAC1E,EAAQ,GAER,EAAS,EAkBb,OAjBI,EAAK,MAAM,CAAG,GACd,EAAQ,CAAC,kBAAkB,EAAE,EAAK,kBAAkB,CAAC,CACrD,EAAS,GACF,EAAK,MAAM,CAAG,GACrB,EAAQ,CAAA,EAAG,EAAgB,yCAAyC,CAAC,CACrE,EAAS,GACD,EAAK,MAAM,CAAG,IACtB,EAAQ,CAAA,EAAG,EAAgB,2CAA2C,CAAC,CACvE,EAAS,GACD,AAXQ,eAWI,IAAI,CAAC,KACzB,EAAQ,CAAC,4CAA4C,EAAE,EAAK,MAAM,CAAC,CACnE,EAAS,GAEC,GAAV,GACA,CAAA,EAAQ,aADZ,EAGA,QAAQ,GAAG,CAAC,GACL,CACX,CAxFA,EAAY,OAAO,CAAC,AAAA,IAChB,EAAW,gBAAgB,CAAC,QAAS,KACjC,IAAI,EAAO,GACX,OAAQ,EAAW,EAAE,EACjB,IAAK,iBACD,EAAO,yBACP,KACJ,KAAK,gBACD,EAAO,4BACP,KACJ,KAAK,aACD,EAAO,iCAEf,CACA,EAAW,kBAAkB,CAAC,SAAS,CAAG,EAC1C,EAAW,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAG,OAChD,GACA,EAAW,gBAAgB,CAAC,QAAS,KACjC,IAAM,EAAQ,EAAW,KAAK,CAAC,IAAI,GACnC,OAAQ,EAAW,EAAE,EACjB,IAAK,iBACD,IAAI,EAAc,EAAa,EAAO,QACtC,CAAA,EAAW,kBAAkB,CAAC,SAAS,CAAG,EACvB,eAAf,GACA,CAAA,EAAa,CAAA,EAEjB,KACJ,KAAK,gBACD,IAAI,EAAc,EAAa,EAAO,OACtC,CAAA,EAAW,kBAAkB,CAAC,SAAS,CAAG,EACvB,eAAf,GACA,CAAA,EAAa,CAAA,EAEjB,KACJ,KAAK,iBAyDT,EACA,EAzDQ,IAAI,GAwDZ,EAAQ,GACR,EAAS,EAGT,AA5DwC,EA4DlC,MAAM,CAAG,GACf,EAAQ,4CACR,EAAS,GACF,AA/DiC,EA+D3B,MAAM,CAAG,GACtB,EAAQ,4CACR,EAAS,GACD,AAlEgC,EAkE1B,QAAQ,CAAC,KAGf,AAXU,iCAWI,IAAI,CArEc,GAwEhC,AAbS,6BAaI,IAAI,CAxEe,KAyExC,EAAQ,+DACR,EAAS,IAJT,EAAQ,6DACR,EAAS,IAJT,EAAQ,8CACR,EAAS,GAQC,GAAV,GACA,CAAA,EAAQ,aADZ,EAGA,QAAQ,GAAG,CAAC,GACL,EA/EK,CAAA,EAAW,kBAAkB,CAAC,SAAS,CAAG,EACvB,eAAf,GACA,CAAA,EAAa,CAAA,CAGzB,CACI,AAA2C,eAA3C,EAAW,kBAAkB,CAAC,SAAS,CACvC,EAAW,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAG,QAE5C,EAAW,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAG,KAEpD,GACA,EAAW,gBAAgB,CAAC,OAAQ,KACd,GAAd,GACA,CAAA,EAAW,kBAAkB,CAAC,SAAS,CAAG,EAD9C,CAGJ,EACJ,GAIA,SAAS,aAAa,CAAC,QAAQ,gBAAgB,CAAC,SAAU,AAAC,IACrC,GAAd,GACA,EAAE,cAAc,GAEpB,QAAQ,GAAG,CAAC,EAChB","sources":["<anon>","src/js/main.js"],"sourcesContent":["// Getting all input fields\nlet inputFields = document.querySelectorAll('.required-field');\n// Listen on focus and provide instructions\nlet formStatus = 0;\ninputFields.forEach((inputField)=>{\n    inputField.addEventListener(\"focus\", ()=>{\n        let text = '';\n        switch(inputField.id){\n            case \"inputFirstName\":\n                text = \"Please enter your name\";\n                break;\n            case \"inputLastName\":\n                text = \"Please enter your surname\";\n                break;\n            case \"inputEmail\":\n                text = \"Please enter your email address\";\n                break;\n        }\n        inputField.nextElementSibling.innerHTML = text;\n        inputField.nextElementSibling.style.color = \"white\";\n    });\n    inputField.addEventListener(\"input\", ()=>{\n        const value = inputField.value.trim();\n        switch(inputField.id){\n            case \"inputFirstName\":\n                let statusFname = validateName(value, \"first\");\n                inputField.nextElementSibling.innerHTML = statusFname;\n                if (statusFname != \"Looks good!\") formStatus = 1;\n                break;\n            case \"inputLastName\":\n                let statusLname = validateName(value, \"last\");\n                inputField.nextElementSibling.innerHTML = statusLname;\n                if (statusLname != \"Looks good!\") formStatus = 2;\n                break;\n            case \"inputEmail\":\n                let statusEmail = validateEmail(value);\n                inputField.nextElementSibling.innerHTML = statusEmail;\n                if (statusEmail != \"Looks good!\") formStatus = 3;\n                break;\n        }\n        if (inputField.nextElementSibling.innerHTML == \"Looks good!\") inputField.nextElementSibling.style.color = \"green\";\n        else inputField.nextElementSibling.style.color = \"red\";\n    });\n    inputField.addEventListener(\"blur\", ()=>{\n        if (formStatus == 0) inputField.nextElementSibling.innerHTML = '';\n    });\n});\n// Control for submit\ndocument.querySelector('form').addEventListener('submit', (e)=>{\n    if (formStatus != 0) e.preventDefault();\n    console.log(formStatus);\n});\n// Validate name inputs\nfunction validateName(name, type) {\n    let typeCapitalized = type.charAt(0).toUpperCase() + type.slice(1).toLowerCase();\n    let error = '';\n    const namePattern = /^[A-Za-z-]+$/;\n    let status = 0;\n    if (name.length < 1) {\n        error = `Please enter your ${type} name to continue.`;\n        status = 1;\n    } else if (name.length < 2) {\n        error = `${typeCapitalized} name must be at least 2 characters long.`;\n        status = 2;\n    } else if (name.length > 50) {\n        error = `${typeCapitalized} name must be less than 50 characters long.`;\n        status = 3;\n    } else if (!namePattern.test(name)) {\n        error = `Only letters and hyphens are allowed in the ${type} name.`;\n        status = 4;\n    }\n    if (status == 0) error = \"Looks good!\";\n    console.log(status);\n    return error;\n}\n// Balidate email\nfunction validateEmail(email) {\n    let error = '';\n    let status = 0;\n    const domainPattern = /@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (email.length < 1) {\n        error = \"An email address is required to continue.\";\n        status = 1;\n    } else if (email.length < 5) {\n        error = \"Email must be at least 5 characters long.\";\n        status = 2;\n    } else if (!email.includes('@')) {\n        error = \"Email addresses must contain an '@' symbol.\";\n        status = 3;\n    } else if (!domainPattern.test(email)) {\n        error = \"Please include a domain after the '@' (e.g., example.com).\";\n        status = 4;\n    } else if (!emailPattern.test(email)) {\n        error = \"Please enter a valid email address (e.g., user@example.com).\";\n        status = 5;\n    }\n    if (status == 0) error = \"Looks good!\";\n    console.log(status);\n    return error;\n}\n\n//# sourceMappingURL=index.ea6ef04f.js.map\n","// Getting all input fields\r\nlet inputFields = document.querySelectorAll('.required-field');\r\n// Listen on focus and provide instructions\r\nlet formStatus = 0;\r\ninputFields.forEach(inputField => {\r\n    inputField.addEventListener(\"focus\", () => {\r\n        let text = '';\r\n        switch (inputField.id) {\r\n            case \"inputFirstName\":\r\n                text = \"Please enter your name\";\r\n                break;\r\n            case \"inputLastName\":\r\n                text = \"Please enter your surname\";\r\n                break;\r\n            case \"inputEmail\":\r\n                text = \"Please enter your email address\";\r\n                break;\r\n        }\r\n        inputField.nextElementSibling.innerHTML = text;\r\n        inputField.nextElementSibling.style.color = \"white\";\r\n    });\r\n    inputField.addEventListener(\"input\", () => {\r\n        const value = inputField.value.trim();\r\n        switch (inputField.id) {\r\n            case \"inputFirstName\":\r\n                let statusFname = validateName(value, \"first\");\r\n                inputField.nextElementSibling.innerHTML = statusFname;\r\n                if (statusFname != \"Looks good!\") {\r\n                    formStatus = 1;\r\n                }\r\n                break;\r\n            case \"inputLastName\":\r\n                let statusLname = validateName(value, \"last\");\r\n                inputField.nextElementSibling.innerHTML = statusLname;\r\n                if (statusLname != \"Looks good!\") {\r\n                    formStatus = 2;\r\n                }\r\n                break;\r\n            case \"inputEmail\":\r\n                let statusEmail = validateEmail(value);\r\n                inputField.nextElementSibling.innerHTML = statusEmail;\r\n                if (statusEmail != \"Looks good!\") {\r\n                    formStatus = 3;\r\n                }\r\n                break;\r\n        }\r\n        if (inputField.nextElementSibling.innerHTML == \"Looks good!\") {\r\n            inputField.nextElementSibling.style.color = \"green\";\r\n        } else {\r\n            inputField.nextElementSibling.style.color = \"red\";\r\n        }\r\n    });\r\n    inputField.addEventListener(\"blur\", () => {\r\n        if (formStatus == 0) {\r\n            inputField.nextElementSibling.innerHTML = '';\r\n        }\r\n    });\r\n});\r\n\r\n\r\n// Control for submit\r\ndocument.querySelector('form').addEventListener('submit', (e) => {\r\n    if (formStatus != 0) {\r\n        e.preventDefault();\r\n    }\r\n    console.log(formStatus);\r\n});\r\n\r\n// Validate name inputs\r\nfunction validateName(name, type) {\r\n    let typeCapitalized = type.charAt(0).toUpperCase() + type.slice(1).toLowerCase();\r\n    let error = '';\r\n    const namePattern = /^[A-Za-z-]+$/;\r\n    let status = 0;\r\n    if (name.length < 1) {\r\n        error = `Please enter your ${type} name to continue.`;\r\n        status = 1;\r\n    } else if (name.length < 2) {\r\n        error = `${typeCapitalized} name must be at least 2 characters long.`;\r\n        status = 2;\r\n    } else if  (name.length > 50) {\r\n        error = `${typeCapitalized} name must be less than 50 characters long.`;\r\n        status = 3;\r\n    } else if (!namePattern.test(name)) {\r\n        error = `Only letters and hyphens are allowed in the ${type} name.`;\r\n        status = 4;\r\n    };\r\n    if (status == 0) {\r\n        error = \"Looks good!\";\r\n    }\r\n    console.log(status);\r\n    return error;\r\n}\r\n// Balidate email\r\nfunction validateEmail(email) {\r\n    let error = ''; \r\n    let status = 0;\r\n    const domainPattern = /@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (email.length < 1) {\r\n        error = \"An email address is required to continue.\";\r\n        status = 1;\r\n    } else if (email.length < 5) {\r\n        error = \"Email must be at least 5 characters long.\";\r\n        status = 2;\r\n    } else if (!email.includes('@')) {\r\n        error = \"Email addresses must contain an '@' symbol.\";\r\n        status = 3;\r\n    } else if (!domainPattern.test(email)) {\r\n        error = \"Please include a domain after the '@' (e.g., example.com).\";\r\n        status = 4;\r\n    } else if (!emailPattern.test(email)) {\r\n        error = \"Please enter a valid email address (e.g., user@example.com).\";\r\n        status = 5;\r\n    };\r\n    if (status == 0) {\r\n        error = \"Looks good!\";\r\n    }\r\n    console.log(status);\r\n    return error;\r\n}"],"names":["inputFields","document","querySelectorAll","formStatus","validateName","name","type","typeCapitalized","charAt","toUpperCase","slice","toLowerCase","error","status","length","namePattern","test","console","log","forEach","inputField","addEventListener","text","id","nextElementSibling","innerHTML","style","color","value","trim","statusFname","statusLname","statusEmail","email","includes","domainPattern","emailPattern","querySelector","e","preventDefault"],"version":3,"file":"index.ea6ef04f.js.map"}